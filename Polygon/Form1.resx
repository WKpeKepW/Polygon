<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABsHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAHzNJ
        REFUeNrtnXe8XVWVxxcDgmCEqMggMPAQhJGhhKH30EIIIkVacIBAQocAkUhHei+h14FQJJRQhAAJhCrd
        QQLSexcVh8io6ABh9o97nkNC8vbv3rfX3efc8/t+Puu/5O573zn77H32Wuv3MxNCCCGEEEIIIYQQQggh
        hBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4cA/hegTYq6M0af4HkKINrJUiGNDjAsxMcSdGWJiMf5RIf5V
        l0SI9rBGiCdDfFai+K8Qy+vSCOHLPMXK+1kJ46YQfXWJhPBjeIj/LekD4K8hhugSCeED3rOfLunk747H
        QiyoSyVEWmYJcUqIKSV/AHwS4lBTZkCIpODg77cln/zd8XKIfrpkQqQBufZrKzL5u+P8ELPp0gnRewaH
        +HMLk/DvIS4LcUCIgxIFPutc4vu8H2KALp0QvWO+EA/2YiU+L8Ssib/TnCGuJ8ZGkVBfXUIhWmOmED8N
        8XEvHgD/HWKQw3dbJ8TvI2N/FGJHXUYhWgPlvi8keB+/PcQ3E3+3r4Q4y7i04EK6lEI0B7btZxMT7J0Q
        kyP/5m8hdsn0gEJa8DBTWlCIplgvxB8sXnm3W4hRxIPiiRCLZHpFeTXEsrqkQnCgzfYXxKS+2RoHckuE
        eC7yb1FAhO7BmRN/1/mNO6S8wJQWFIJiSLG69zShsDtY/wv/ZwSxEr8ZYiWH7/vjEH+JjP3HEAN1aYXo
        GRyYPUasqOfY1Om9eUPcT/y/y0PMkfg7f924tOCtIb6hSyzE9MFB2eEhPo1MpBdDLD2d/79liA8j//dP
        ITZz+O5rh/idxdOCQ3WZhZg+y1njwKynSYRtPqrxZprO//9aiKuIlfhua+gKpARpwTOIsX8VokuXWoip
        +WqIi4kJhAO3+Xv4nFWtkRrs6TOgJzDc4TcsGeL5yNifFrscpQWF+AIbWaNqr6fJg/r7bSOfg7bhEy3e
        NgxdgdQ6ftiVjLT4YeRrIf5dl1yIBt8KMYFY/a+zxoFbjO+FeIr4vFOLB0ZK0LvwADH2RcWuR4jag2Ke
        v0cmDLQA1mziM/ckP3MNh9/DdC8iLbihLr2oO4uGmESsmKdZ46CNZW5rSHfHPvdaclfRDF8vditKCwrR
        A6jKO87iab9nQny/hc/fOMQHxLnCYIff1j/EexZPCw7TbSDqyioh3rL4if0+LX7+7CEuNS6zMF/i34bd
        yijj/AQW1q0g6gZy9j8nJsg9If65F+OsEOJ1i9cWoKlnpsS/8d8s3qOA3c8RprSgqBk/Mq5qb/MErxlH
        GldduJTD7/yJcWnB5XRLiLqAFf1eYvW/wtLU7XcVW+3YeNAfSC0fxqYFUQSltKCoBftZ3N0HZwMrJxwT
        NfgfWbzDcD2H37uNxdOCKILaSLeG6HTQu/+sxXv3j7O0vftIt40zTmOgb+LfzMqae0iXCVEacDJ+unHq
        PYs6jA+Z7vctj78fiphixiaQLttZt4noVPpbPDeOSbCb0/h4vz/P8gh5sg+/x0N8V7eK6DRQHTeWmADj
        rdEb4MUyIV6yuJCnR8ce8/qDbMVRll66TIisMLJZ7TgIQ67/oGKS50jNMdJlr4dYXreM6BQWCPGwlScV
        lvP7fMc46bJLTGlB0QGwKy6UgNrZI59zR7JViP+JjP2BKS0oOoCc79wpziQmOJxJIC14TQnOQ4RwJeep
        O0N/i2cloCngkZWADgGTFtxVt5GoKjnz7gxsam6Spa9LwNhQJIpJl/3alBYUFYStvIMD0FwZv2euykQA
        TcJnTGlB0YEwtfew116vBN81R29CM2O/YY22ZiEqQZfl675rBbY78UpL7yoER6P7iLEhbDK7bi1Rdtj+
        e9hqL1Wi783oE3xY/LvUwNGISQturNtLlJ2cCjy9oV0KRTMae4zlSUkKkQxWgw8CGfOV8PtDo/Bti2sU
        7usw9uoh3rU8KUkhksCq8G5T0u8PkxBPleLY2KdYPC2IVulFdKuJstGMDn+fEv8OL58CBiYtiAfEMaa0
        oCgZjBMPtrhrVOC3ME5FqCBcy2HsfYxLC66oW06UBcaLb0qxxZ2lAr+H9SpEL0FqVyE2JTnalBYUJXlv
        zuXG60kqt+JW2MLiKcnJIX6o20/kZtUQ71j85Hx4xX4XevEvJlbih0LMn3hspAWvIsa+szh7ESIL7I16
        d4h5Kvj7oAj0qsVrGqB3kLqVeTXiwYpzit11G4pcbGmcu89mTuPPXLyD40HkUVSESQ2dglhaEHoHyzi8
        Wp1MvFpNMh8FZSF6hJW2uszS189jsvcLcZI1tPTRUYjKwgUcfmdXiF8Rv/NcS9/XsHhxdhI7XD3WlBYU
        bQQTkPG8e9N80lX97cv5cqzSUNDx6J3f0ThXoQEOYzNpQfydV9JtKdoF63p7tMPKhDTZXT2Me4bDSty3
        2GXEdgG3WEMHIfXvvYfcaSktKNz5SjHJYjekl5LNvpEV0UtjYL1ile/pN2OXMNRh7M2NSwtuottTeLN2
        iN9ZHosrplTWS2UIu4qzibGhg7Bw4rHZTsWJIb6tW1R4MWeIG4gb8TZLb3KJnQfq76cQ43vpDEK/4AXi
        1Qd6CKnTgqi3iHUqIi24p25T4cV2FtfS/2OIDR3GRt39e8Tk91QaxuEnsg2Ms09qCS+24vJJa5RmC5GU
        fwnxCDHxLggxW+KxWQ3/dngNQMfgQcsj4bVYiN9YPC14vCktKBKvfAdb3N3nlRDLOozPuPi0021osDX6
        AGISXh61+ntbPgFTUVP6hXiZWHEPcVhxUdzzUAuTvzsusvQee9AzuNby1OqjpPpuYuwrLH0Blqgh2M6f
        T9xwjxSvCal3HgcSO48c/n6Ms4/XoRxKq/9k+UqwRY0YaI2DvZ5uNmzPt3MYm/EVZMLDY4+V8HqqeHdP
        yRzFCh/73SiYUlpQtAxSebcSN9qN1kgRpgR593OJsZEam2x5PPZQl8DU6p9o6YVQGAFT7ED20m0sWmXn
        YvL0dJOhKGgdh7FZX0FMbMbfD2KaHl1zTK0+2npXddiBnJBpByJqAKrZfk1MLJQFpxbH7GuNuvrY2DcX
        Ow8o9Oby92MP5aCb8LXEY7NSbB47ENHBYJKgkSfWB/+8NRqDUsP4CqIu/4s1/yMsX3qMOZSD88+WDmMz
        YqxvF68MQlCghfcNiyvhoCU4tRBHl7XmK8h67Hmkx/B5lxNj3198z5TgkG+i5fE1FB0IbpLLyJv5Ow47
        jyOInceLNn1fQUZMEyv15g5/N/Tjv5npobmpcWnBzXV7ixQ3E7azWzmMzfoKHjCDSZTT3w8Pr2OIh9dz
        Dq9N7A6kqtqMok3g5riLuJHGOBxooW7+EmJs1OH3pMLLdM3hrGAfh78fLLueIH7DKEt/cLpyccbRaerM
        oo0wdeZIaa3mMDbrKzg48jlseszD3w8gLcmkTtd22IEcR/xuNBMtrltdTAsrQOmRUmrGV5Bx4kF67Eni
        8051WIlRPHU7MTZ0FVIXTzG/G9fwJFNaUEyzajIS1F5FJUwqC3X3zfgK7kF+5poOv2eQ5SufZn63R2GS
        qDCYWIw3vUdZKVPM0r1aN7NqYVdxB/G511l6fz80UF1oeRqo2N2UR2GSqCBobb3GuNbW1I0l7Pt6q76C
        7LmCh78fdAhesTwt1NAhmBwZG+nSLXT7i22skdbLoTjrfWIPHYD/tN5nFloBk/owi7cyQ2ehX+KxkVFh
        ajk80qGiQkDe6gHLI2/VLl/B5UO8Zq3XFvSGBUM8SvzG8y29jBpTmOSVDhUVADf7SMsjcGnWvqo9rMRH
        GFdduLTD79zBGl2LMSHVgYnHRVrwWOJ3V822XSRiSeMkro+y9B10bN0+qttS1K93Gefvd46ldxWCP8FN
        xNjQXUgtpY7CpEnE2Ceb0oK1Ajf5WcSN8bilN7kAI4zzFUzpd7cjsRKjw3B9h9+7rjUci3KYqcA+nEkL
        rqZpUR+YG9LL5or1FUzteMuuxNAY6JvxgZvaTo1Nh3qUd4sSwk6EcZbe6JL1FXyi2L6m5mhi7I+K3YLH
        K9fzmV652LTglpoenc8QYisMKa4NHMZmfQW99PsYX8HPivOCrsTjs4eu0GFIbamODM6lxO++15QW7GiQ
        lnqMuBHOs/RpKdS9X0+Mfbv5+AqiknAK+QDASvwzS1+gA/2EXxLjj7b0aVdG5AVpwX01TTqTZgpTlnEY
        n/EVhIb/IIexUe//W2tOShy1A8s5fJetLU/hFatX4NUlKTKD0tRXLV6aerDDysf6Cl5oPr6C11prfgKo
        IvRwFbqaGNvD6pvVK4DfgdKCHQRu4ouIC/+wNay4Ur/7Mr6CXj5+qPP/c4sPAPQRbOzwnVa3RuotR/PV
        bhbXK0Bj2BqaNp3DoGJ7HWtP/Q+HsfsZ5yt4mMPOA/X9D1rvXIWQQkvt74fV9STLI94Bh6QJxO++utit
        iIrzLcsnUMH6CqJefkGHnQfq+z/u5QMAK/EeDteFtfr2EO9guiS9dB9Fm2G2fO+F6O8wNuMriJTkDg5j
        o67/RWJyv0I8JKCy8z2H77iXxav03i1eGVLCpgVRrj2vplB1ySlSiSKiccTYN1mjOCklqLw7h9x5DCRX
        4hMcVmJW099jO84oMCMtOELTqJqw3WAoy13CYfxhFnf38fIVRD3/H4yv+GP8/aBb4CGjxVTpYTu+tcP9
        cRRxf8ByTWnBCgKZaKYffISl74NHA9HjxMp2pvn4Ct5szdX8Q2/gHuL/wHPAQw59NDE2CohSG7Gg74Dx
        f/QQTxWOsP7xHu947Mri5Su4k3G+gtN2/TH+fl718tiOM1ZsIx0e1oyMuZd4qnAi583M+grub/l8BafX
        91+Fhyb0G5ZMPDayROONk2RXWrACVGE76+ErmEL5pwqvTWdZetESpk7E4xxCOFDHAy2QQvuvCgen0HFY
        N/G4rHiqx4NbJIRpec2d0hrjsJXEDZzCVxBUIXX6C0ufOsUD9HXiAerhbiwSwLa85ixqQf376g5jp9b/
        Z/39+jv8FugwvG/tL57C7ufIjLsf0UuYlldM0N0dxs5Z1urhAMQejHVa+TR7DnG6KS1YKtiW1wnFzZ0S
        1lfQy5XWywOwrg1UO5vSgpVjsMVbXrFF/oHD2NjS5/QV9HIBbqaFOrW/X84Watbd2MNTUbQA2/LaaeIW
        rK9gbxRucoqoLFA8XGJ/24scriuz+8GCs42mX17YltdOk7cC3r6CZnn9/ax4vWBk1DZKPC67+4Gt3Hya
        hvlgWl47UeASBUw/J8ZOYX7JCql6+PuxQqrjHc52ljOursKjolMQsC2vkLheyGHnwUpcV9lXsJshVj8p
        dbay0qunQ0RotuU1JTlNLlhfQdT1z5FozGb8/TzMVEYRY3uYqXQZ11sxypQWbCt9rVENVnabKy9fwVip
        81vWqOtPCWunNszhN6Pw5lmL11mktlMz43Ud+mtato9WW17bNRH+1oEToY6GqlbsaG4lfvdYU1qwLXRZ
        Nayuc26FF3X621fBUj3lq083G1pc2xFpwcGanr6kaHntDTuQh2EDHcbGFvM9Yuexm+Pfv26Hn90gu8Gk
        BZlmK9ELUrS8tgrSYY9a/dJh04K89wPEd4Hqrkf68ypi7LutoQuREqYoCvfeT01pQRfYnm2Pp3BdC2Jm
        BCrgOrkAakb3wOGWR7VIGN/y6vEehqf/K1a/ktgZgRLoa6zcJdBPW0MfIiULkedPHmKvtcaj5bWZnQfz
        /gfzz05qiokB77ycTVBPGdcElbr9mslAIS24tqZtOrxaXhlyt8W+ROw8DnfYeTArMdMGjYm6WAfdE6xq
        kYdWQi3xbHmNkdtX8Dxi7Mcsfakzy+LFVrtThFBYGNUir0WhVrSj5bUnWGksj+0eK401JPM1Gm7xykRI
        oa3WQedCeDhfQDx8HjKlBXtFrhNfUFdxzGZBuu0uyyOGijRjKjHUZlnW4gfDXinpWtDOltdpqYo89nol
        uVabWtyIxctum1XzTT0R2dQwitKW0nRunlxVXwD15GU3yDjb0pc6twpKby8jvrOHrj4e1kcYVx2aeiIu
        ZJxWwlklulaVIGfdNz7vcmJsL4ssRpr6hRKuKisSD83clmgeD80dLV4e7mFm0tHsZ3laXgHjK4jtrJdJ
        JrOdLWO5KR5eR1s+AY2hxnWIpn5t6mucG/ONprQgRc6WVxxo3U1czKvMx1fwUqu2Dh1rt32G+dii32J5
        NCKUFkxE7pbXsvsKVkGJdhfjUqfrOIw9wLjUaWqVKLZmAyXdC2iaz5j+xrW87uowNusreKL5+AreSdxA
        VbCoZgU0PLbEeL8/1/LoRPYzzszkQFNacLrkbHnFzuMU43wFPcpa97R4WSvq7teoyLWEHkJMQANb4u0d
        xl7GuPLp1ErR+KxDjUsLLq3p/mVytryyvoJ7OIyNB0qssWVK8YCapSLXkq2Ug76CRwPVgcRE9PCKYDUj
        ypTCLQU5W177GOcriC363InHnqV4pcjR2uoNuyU+1HxaqB8irunFDvfTEIunBT2yEZUFT+yDLF/LK+sr
        +EOHsVEf/47FC46GV/S6Mq3MKKdd1mH8H1sev0iUZjOK1TdZ/jLu0qwUuVpekU5jfAVRb+4hbzWGGBt1
        9vNU9Npie/8I8RsvsPQyaugAvI4Y28MxGmrUTDZiu7pP/pwtr1ihUFATE7h83Rr15qlBIVFMVgsFSZtW
        /BpvR57tDMp4trN74nHZbISHiEylYFted3AYG6W0jMT1kebjK3g/cYNc5rDzaDfI7txA/FboLnwz8djI
        7pxKnLFMsvR1JWw2wkNGrhLkbHnFE/psYmzUl6c2ucDO4yfGSWuv2CHXmvX328VhbLa+43hLW1nKnoG8
        XDwsagfb8urRRIETWMZXcKjD2KiDf47YeRxt6Uudc4GV+AzjKjwXcRifqfBEb8kqmc5APExsSg3b8urR
        RtnXuFPaW8zH3YeZCKin/26HXXPmwefV4wG9iHuIv/uVlr67dHvj0oLr12Xy52553ZG8IAMcxl6H3Arv
        3KHXnnn18fD3A9CNiHV5Qn/iR4nHZe3kbraapAXZlteRlr5mmtV1z+kreJvDYVhZYA8/LzcfnYcriLHv
        tfQKU8wrp9dhd6nI2fLKOrt41WozW0HUzw/s8HuATX9u5jD2ysW7fqzwar/Ei8+sxaKSozS6VORseUXd
        N+Pt5tGtxdaIexTElA22AMrD3w+vn8dZHq1HLCpMWvAQ69C0YM6WV9R7X2x5ZJzZLjGvktgykrMEGlmG
        ScS9cLqlFS1hS969/CWzk7PlFR2EMXcf7Dy2dRibkY/u6Cf/dMjdBAUL9ZhoCXQp+icel216O6/TdoI5
        W15R5z2B+KN7OMjgIl5oKgmdHqy/n9c9MZ4YG/oUqUVLmNJoVMcO6JQLzT7tf+P4tGc85NZyGHtD44Qx
        6toUknNXmMvzEQ+UGy2PdmGp3/f2dlplGF/B0yy9SCVSebl8BavC3BU4F/LQ8UN16++t/dqFbYc98fXy
        kT/e8vkKsuKYdbeRRmaI8ffzyAxBXyKWGfqkOLxLeT7D9qLkNH5NApPznRxiE4exUdfN+Aru6zB2Tnns
        qlGG2pAcDTtMNyq+12FW0cNhtuprtPmIbeT0FTzG8hlkVJGchiisvVfqk3n8jgOsQ9PDuVteGV9Bj7pv
        wPgKflz8fSQP/f8PTaY/xMtoc4jFqzRxMr9B4nHZtOD5VrG0YM6WV/j13Wt5Or9YX0EPk8yq02X5/P1Y
        HT/4HaTuEGXUsD0ePm7kbnmtgq/gVprv0yWXv58Vnxk7mffQiGD9MMY5PHxcyNnyyvoKHmf5fAXHWHpf
        wU6hGZWovonHzqkSxSgm4eGzU9kvIFvkgK2Uh/7b6cTYk8zHV3A4sfNAPcRqmuc9wupEDnEYO5dOJO7d
        M4l718PSLCk5W177W9xXEFVnuzmMjQrGp4mdh4evYKeBlbgKStErJB57SePSgh7y+EnI2fKKGv6xxNge
        voKY0IyvIOreF9P8pmAVdb28Ih4g7iXULsye4eHjZZDTK5ppee3nMD5cYHL5CqJO/V1i57Gn5nVTk4Fp
        nfXw9wOoOoy5Ck229G5RaEVnjGoutJKlBXO2vLK5VA8fONSnX0OM7aF53+lgJf5lpuuKdC5TSIY+htQl
        7NsSD59SKUflbHnN7SvIrBR4NcDB6L4hRijo2M+4Zir0EZxU/PtUY+NaXUlsxz12dnidZdKCHjUJLZGz
        5bUK74qfEecDivL93dixPc522LTg0NyTP2fLaxVOixX1eEilzu6wxXSoSejK+QDI2fJa9nyxoj7hUd/B
        ltP/zDKlBXO2vFahYkxRr0hd4Yld5khil+mVCekRtuX1OfNpeS17zbiifuHR48GeM13kkAnpkZwtr11W
        /q4xRT3Do8tzMJFpQo3LoHZN/pwtr1XoG1fUNzwWPaQFryXGbpulHNvyuqXD2GVXjvm0eO25r3gAKjon
        7itSfrGaE4/XXihWx/pccBg/zHvy52x5rYJ2HGoSVi5eFb6h6KjANUXDzhMZDr7xWaOIcR+39K3KU5Gz
        5TWneizjK+ihHivKR67U9xJkWvBIr3swZ8trXfXjRfnIWfzG6Gy6pAVzt7zW0UFGlBfcEznK33GonqVB
        KmfLa1095ER5ydkAxzSgJW19Z1tePVoj6+oiK8pPrhb4PsalBcdborRgLnEEUAUf+VEmd586klMEZ01r
        GNq6C+/mkkcCrK8g0pLzJB4bBUdQDmZKnZfQXKgtuWTwsOCcRozbK+n9nAKJgPEVREHSZg5jI5f/FrHz
        GGFy96k7uYRwGQl8LGBHWYsS+LkkkgHrK4iSZA93nyuIse+1hguRqDcoEMolhT/Ca4HOaZIAmHwnmpFW
        chh7c4uXOnv5CopqAjOcWIeohxnOvORCeYk1mRbMZZMEWCGEYyy9uw+cgu8h/qBXmtx9xNTv5Lns8LYi
        XpVRQfuDZrY0uYwS2T8k6rEXcbiQ+xrnK7iK7nnR4sKV2hCXTdPTnhhDLI9VMmDEELGV2sVhbNQRPGPx
        UufjHXYeovrMRL66vhFixcRjo1CPSQvuGvsgpuUVATHO1MYEqKS7gRjbQ2O/O60SKziaZD6+gqIzYA+v
        R1vatDkK5k4l7t8ed85sy+vL1pDjTg3qpmPuPkinbOgwNtNvjVLn3XWPiwhM+npyiE0y7GB7fAXJ2fKK
        eulHrP0FFYD1FZxg6X0FRefBFrBNtPSl8/sRZ1h4BflSWjBnyyvenQ42rqRyWYcLxvgK4sxjoO5tQYJD
        YqaQbO/E46Ii9i5roXI3Z8trv+K1IrbzONR8fAUfIv5g+H6HWFr7qZ2soTAzc5MPS7Rbb2+yDitzHGBc
        B+uLxeKX0k7tFmJcpAU37r6pvm2cwMHYYrucktmKbX1s7EfNx1fwQGLn4WVR9XHxyoUWaka9eObinOQ5
        YpunqK+tGTvu+GLH8HnuO6ax79XyyvgK/rVY8VKDvG0Z3H3w+5l+BqRI39HEUiSKj4pdA+XugxRZ6pZX
        pPJuI8ZGnfVcDg+A/a08pp3XRdJCSPOcq5tWkTjwmhIt+kFhzvIOExB10Yy44joOY89csgkFNde5e/i+
        cxqnTKRQNBNIbUdPKz+y9E0MrK/gmeYntnFiiS7ExMguB1maq3XDKhIHqgc/r+qLCV+krL3H6ns0Mebz
        5uMr2M0A4vyhHfFJcWocYxixY1Io2MD8u7A7DccICxxraWrgUQfN+Arub75iG8hAwFr5w4wXAaf5aORg
        dAWwQzifOLBVKJh4tpj7n08yRlggRf89DrouI76ch6/g9ID4B/r6R4e4wxrCpu0KHPztZc1Vg/W1Rgv2
        mDZ/V0U14o4iTTyFWGCnUrPCCnQfMTF7q8CzqXG+gltZe5m1OGibq40xey92OF/N8H0V5Y45i3k8ttUF
        dgtiO4zJu3mLNy1bpojVrY8JIVpZYCe3usCiieEqYoK2qsKb01dQiE4niXHvqiHeJg6u9mnyyy1unK/g
        SZbe3UeIOpBkgcXkO8HSOvHgM0+2fL6CQnQ6SY17WS++U8nVmvUV3EvXUYimcTHuZdx4UUW0ZuRzWMFC
        D3EEIeqAi3Ev6tLvJCYuTAp7ahGGr2AOeSQh6kAzxr1zN/vhEAz4IPLBMA0dPIP/n9NXUIg64Grci0l5
        CTGBHwwx/zT/FwUuI42TSF5B11GIpmnLAovJ+brFywoPsKmr2lhfwZaNC4WoMW0z7sXkPMLinXsvFpMe
        oKz2LON64BfWtRSiadpq3NtlDRPQ2IQ+u3hgrGucr+AwXUchmiaLce9Qi7ehYtLDFIFx9/HwFRSiDmQx
        7sVkHUdMbLQMMxr7G+g6CtE0rHHvOI8FdkAxeXsrRABRi9l0LYVomiGWz7j383eP3gppwmCjn66jEE2T
        07j3H8AU9KUWJz9SFkhdzKRrKURTdBv3xrJxXsa9/wCTF+agn7TwAIDYyBnWqBk4SKFQUAH3qmMsrqPp
        Zdz7JeCn97BJVFGhKFN4GPfOEMZRV6FQtCf+UszJtoEOwLH6wysUpYjrrSEK2lbWsoZpqC6AQpEv3ivm
        YtuBZdfpugAKRdbwMO6l+X6IZ3QRFIos8XQxB7OytcUNRhUKRdp4zRquVqUoUli9yPHfZg19P9k0KRTp
        A3Pr1mLbv0o7cv7NMEuRHZBNk0LhF31M3hlCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
        EELUgf8DdUgLnmsO31kAAAAASUVORK5CYII=
</value>
  </data>
</root>